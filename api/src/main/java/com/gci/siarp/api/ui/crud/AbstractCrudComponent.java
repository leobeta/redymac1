package com.gci.siarp.api.ui.crud;

import com.gci.siarp.api.ui.layout.CrudLayout;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.CustomComponent;

/**
 * Clase base para implementaci√≥n de CrudComponents concretos.
 * 
 * @author Alejandro
 *
 */
@SuppressWarnings("serial")
public abstract class AbstractCrudComponent<T> extends CustomComponent implements CrudComponent<T> {

	protected Class<T> domainType;
	protected CrudListener<T> crudListener;
	protected Object[] newFormVisiblePropertyIds;
	protected Object[] editFormVisiblePropertyIds;
	protected Object[] deleteFormVisiblePropertyIds;
	protected String[] newFormFieldCaptions;
	protected String[] editFormFieldCaptions;
	protected String[] deleteFormFieldCaptions;
	protected Object[] editFormDisabledPropertyIds;

	protected CrudLayout mainLayout;
	protected BeanItemContainer<T> container;
	protected CrudFormBuilder<T> crudFormBuilder;

	public AbstractCrudComponent(Class<T> domainType, CrudListener<T> crudListener) {
		this(domainType, crudListener, new VerticalCrudLayout());
	}

	public AbstractCrudComponent(Class<T> domainType, CrudListener<T> crudListener, CrudLayout mainLayout) {
		this.domainType = domainType;
		this.crudListener = crudListener;
		this.mainLayout = mainLayout;
		container = new BeanItemContainer<T>(domainType);
		crudFormBuilder = new AutoGeneratedVerticalCrudForm<T>();
		newFormVisiblePropertyIds = container.getContainerPropertyIds().toArray();
		editFormVisiblePropertyIds = container.getContainerPropertyIds().toArray();
		deleteFormVisiblePropertyIds = container.getContainerPropertyIds().toArray();

		setCompositionRoot(mainLayout);
		setSizeFull();
	}

	@Override
	public void setCaption(String caption) {
		mainLayout.setCaption(caption);
	}

	@Override
	public void showAllOptions() {
		showAddOption();
		showEditOption();
		showDeleteOption();
	}

	@Override
	public void setNewFormVisiblePropertyIds(Object... newFormVisiblePropertyIds) {
		this.newFormVisiblePropertyIds = newFormVisiblePropertyIds;
	}

	@Override
	public void setEditFormVisiblePropertyIds(Object... editFormVisiblePropertyIds) {
		this.editFormVisiblePropertyIds = editFormVisiblePropertyIds;
	}

	@Override
	public void setDeleteFormVisiblePropertyIds(Object... deleteFormVisiblePropertyIds) {
		this.deleteFormVisiblePropertyIds = deleteFormVisiblePropertyIds;
	}

	@Override
	public void setEditFormDisabledPropertyIds(Object... editFormDisabledPropertyIds) {
		this.editFormDisabledPropertyIds = editFormDisabledPropertyIds;
	}

	@Override
	public void setNewFormFieldCaptions(String... newFormFieldCaptions) {
		this.newFormFieldCaptions = newFormFieldCaptions;
	}

	@Override
	public void setEditFormFieldCaptions(String... editFormFieldCaptions) {
		this.editFormFieldCaptions = editFormFieldCaptions;
	}

	@Override
	public void setDeleteFormFieldCaptions(String... deleteFormFieldCaptions) {
		this.deleteFormFieldCaptions = deleteFormFieldCaptions;
	}

	@Override
	public CrudLayout getMainLayout() {
		return mainLayout;
	}

	@Override
	public void setCrudFormBuilder(CrudFormBuilder<T> crudFormBuilder) {
		this.crudFormBuilder = crudFormBuilder;
	}

	public CrudListener<T> getCrudListener() {
		return crudListener;
	}

}
