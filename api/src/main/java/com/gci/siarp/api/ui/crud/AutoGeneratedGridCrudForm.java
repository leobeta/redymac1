package com.gci.siarp.api.ui.crud;

import com.gci.siarp.api.ui.crud.CrudComponent.CrudFormBuilder;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.fieldgroup.FieldGroupFieldFactory;
import com.vaadin.data.util.BeanItem;
import com.vaadin.server.Resource;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Notification;

/**
 * CrudForm con Fields autogenerados. Permite especificar un
 * FieldGroupFieldFactory. Por defecto se usa un
 * DefaultCrudFieldGroupFieldFactory.
 * 
 * @author Alejandro
 *
 */
@SuppressWarnings("serial")
public class AutoGeneratedGridCrudForm<T> extends CustomComponent implements CrudFormBuilder<T> {

	private GridLayout mainLayout;
	private FieldGroup fieldGroup;
	private FieldGroupFieldFactory fieldFactory;
	private int columns;
	private int rows;

	public AutoGeneratedGridCrudForm() {
		this(new DefaultCrudFieldGroupFieldFactory(), 2, 1);
	}

	public AutoGeneratedGridCrudForm(int columns, int rows) {
		this(new DefaultCrudFieldGroupFieldFactory(), columns, rows);
	}

	public AutoGeneratedGridCrudForm(FieldGroupFieldFactory fieldFactory, int columns, int rows) {
		this.fieldFactory = fieldFactory;
		this.columns = columns;
		this.rows = rows;
		mainLayout = new GridLayout(columns, rows);
		mainLayout.setSpacing(true);
		mainLayout.setSizeUndefined();
		setCompositionRoot(mainLayout);
	}

	@Override
	public Component buildNewForm(T domainObject, Object[] visiblePropertyIds, Object disabledPropertyIds[], String[] fieldCaptions, boolean readOnly, String buttonCaption, Resource buttonIcon, String buttonStyle, ClickListener saveButtonClickListener) {
		mainLayout.removeAllComponents();
		mainLayout.setColumns(columns);
		mainLayout.setRows(rows);

		fieldGroup = new FieldGroup(new BeanItem<T>(domainObject));
		fieldGroup.setFieldFactory(fieldFactory);

		AutoGeneratedCrudFormHelper.addFields(domainObject.getClass(), visiblePropertyIds, disabledPropertyIds, fieldCaptions, readOnly, fieldGroup, mainLayout);

		Button saveButton = new Button(buttonCaption, buttonIcon);
		saveButton.setStyleName(buttonStyle);
		mainLayout.setRows(mainLayout.getRows() + 1);
		mainLayout.addComponent(saveButton, 0, mainLayout.getRows() - 1);
		saveButton.addClickListener(e -> {
			try {
				fieldGroup.commit();
				saveButtonClickListener.buttonClick(e);

			} catch (CommitException e1) {
				Notification.show("Corrija los errores e intente de nuevo.");
			}

		});

		return this;
	}

	public GridLayout getMainLayout() {
		return mainLayout;
	}

}
