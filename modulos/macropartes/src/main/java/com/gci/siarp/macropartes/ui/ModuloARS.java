package com.gci.siarp.macropartes.ui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.function.Consumer;

import org.springframework.beans.factory.annotation.Autowired;

import ru.xpoft.vaadin.VaadinView;

import com.gci.siarp.api.annotation.SiarpUIComponent;
import com.gci.siarp.api.ui.SiarpSession;
import com.gci.siarp.api.ui.SiarpTheme;
import com.gci.siarp.macropartes.domain.Ars;
import com.gci.siarp.macropartes.domain.Ciudades;
import com.gci.siarp.macropartes.domain.Marca;
import com.gci.siarp.macropartes.domain.Modelo;
import com.gci.siarp.macropartes.domain.NumeroDeOrden;
import com.gci.siarp.macropartes.domain.Programacion;
import com.gci.siarp.macropartes.domain.Referencias;
import com.gci.siarp.macropartes.domain.Serviteca;
import com.gci.siarp.macropartes.domain.Stock;
import com.gci.siarp.macropartes.domain.buscarArs;
import com.gci.siarp.macropartes.service.MacropartesService;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.FontAwesome;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeSelect;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

import eu.maxschuster.vaadin.autocompletetextfield.AutocompleteSuggestionProvider;
import eu.maxschuster.vaadin.autocompletetextfield.AutocompleteTextField;
import eu.maxschuster.vaadin.autocompletetextfield.provider.CollectionSuggestionProvider;
import eu.maxschuster.vaadin.autocompletetextfield.provider.MatchMode;

@SiarpUIComponent
@SuppressWarnings("serial")
@VaadinView("macropartes/ars")
public class ModuloARS extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panel_observaciones;
	@AutoGenerated
	private VerticalLayout verticalLayout_5;
	@AutoGenerated
	private TextArea ta_observaciones;
	@AutoGenerated
	private Panel panel_5;
	@AutoGenerated
	private GridLayout gridLayout_3;
	@AutoGenerated
	private Panel panel_13;
	@AutoGenerated
	private GridLayout gridLayout_2;
	@AutoGenerated
	private NativeSelect select_selloMati;
	@AutoGenerated
	private Label label_13;
	@AutoGenerated
	private NativeSelect select_protector;
	@AutoGenerated
	private Label label_12;
	@AutoGenerated
	private NativeSelect select_neumatico;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private Panel panel_4;
	@AutoGenerated
	private VerticalLayout verticalLayout_9;
	@AutoGenerated
	private GridLayout gridLayout_12;
	@AutoGenerated
	private TextField tf_nombreP2;
	@AutoGenerated
	private Label label_19;
	@AutoGenerated
	private TextField tf_codigo2;
	@AutoGenerated
	private Label label_18;
	@AutoGenerated
	private GridLayout gridLayout_11;
	@AutoGenerated
	private TextField tf_idLlantas;
	@AutoGenerated
	private Label label_11;
	@AutoGenerated
	private TextField tf_dot2;
	@AutoGenerated
	private Label label_10;
	@AutoGenerated
	private TextField tf_stock2;
	@AutoGenerated
	private Label label_17;
	@AutoGenerated
	private NativeSelect select_cantidad2;
	@AutoGenerated
	private Label label_9;
	@AutoGenerated
	private TextField tf_diseo2;
	@AutoGenerated
	private Label label_8;
	@AutoGenerated
	private Button bt_buscar2;
	@AutoGenerated
	private TextField tf_descRef2;
	@AutoGenerated
	private Label label_7;
	@AutoGenerated
	private Panel panel_3;
	@AutoGenerated
	private VerticalLayout verticalLayout_8;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private TextField tf_nombreP;
	@AutoGenerated
	private Label label_21;
	@AutoGenerated
	private TextField tf_codigo;
	@AutoGenerated
	private Label label_20;
	@AutoGenerated
	private GridLayout gridLayout_10;
	@AutoGenerated
	private TextField tf_idLlanta;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private TextField tf_dot;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private TextField tf_stok;
	@AutoGenerated
	private Label label_16;
	@AutoGenerated
	private NativeSelect select_cantidad;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private TextField tf_diseno;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Button bt_buscar;
	@AutoGenerated
	private TextField tf_desRef;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private GridLayout gridLayout_4;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_6;
	@AutoGenerated
	private GridLayout gridLayout_7;
	@AutoGenerated
	private NativeSelect select_reportAlinea;
	@AutoGenerated
	private NativeSelect select_marcacion;
	@AutoGenerated
	private NativeSelect select_recepcion;
	@AutoGenerated
	private NativeSelect select_alineacion;
	@AutoGenerated
	private NativeSelect select_balanceo;
	@AutoGenerated
	private NativeSelect select_instalacion;
	@AutoGenerated
	private Panel panel_infoVehiculo;
	@AutoGenerated
	private VerticalLayout verticalLayout_4;
	@AutoGenerated
	private GridLayout gridLayout_6;
	@AutoGenerated
	private NativeSelect select_serviteca2;
	@AutoGenerated
	private Label label_serviteca2;
	@AutoGenerated
	private TextField tf_numOrden;
	@AutoGenerated
	private Label label_numOrden;
	@AutoGenerated
	private NativeSelect select_linea;
	@AutoGenerated
	private Label label_linea;
	@AutoGenerated
	private NativeSelect select_marca;
	@AutoGenerated
	private Label label_marca;
	@AutoGenerated
	private AutocompleteTextField tf_sigla;
	@AutoGenerated
	private Label label_sigla;
	@AutoGenerated
	private VerticalLayout verticalLayout_7;
	@AutoGenerated
	private Panel panel_informacionEntidad;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_4;
	@AutoGenerated
	private GridLayout gridLayout_9;
	@AutoGenerated
	private AutocompleteTextField tf_quienRecibee;
	@AutoGenerated
	private Label label_persReceibe;
	@AutoGenerated
	private AutocompleteTextField tf_unidadAten;
	@AutoGenerated
	private Label label_unidadAtendida;
	@AutoGenerated
	private Panel panel_general;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private GridLayout gridLayout_5;
	@AutoGenerated
	private NativeSelect select_serviteca;
	@AutoGenerated
	private NativeSelect select_ciudad;
	@AutoGenerated
	private TextField tf_refCompro;
	@AutoGenerated
	private TextField tf_fecha;
	@AutoGenerated
	private Panel panel_botones;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button bt_buscarArs;
	@AutoGenerated
	private Button bt_nuevaArs;
	@AutoGenerated
	private Button bt_reporte;
	@AutoGenerated
	private Button bt_guardar;
	@AutoGenerated
	private Button bt_limpiar;
	@AutoGenerated
	private Label lblForma;
	private BeanContainer<String, Ciudades> beanConCiudades;
	private BeanContainer<String, Serviteca> beanConServiteca;
	private BeanContainer<String, Serviteca> beanConServiteca2;
	private BeanContainer<String, Marca> beanConMarca;
	private BeanContainer<String, Modelo> beanConModelo;
	private float stock = 0, stock2 = 0;
	private int swParaDecidirStock;
	private Window wDetalleComunicacion;
	public Consumer<Referencias> consumerReferencia = (ref) -> obtenerReferencia(ref);
	public Consumer<Referencias> consumerReferencia2 = (ref) -> obtenerReferencia2(ref);
	private Collection<Referencias> lisReferencia, lisReferencia2;
	private long item1;
	private long item2;
	private String item1String;
	private String item2String;
	private int swItemPorProgramacion;
	private float cantPorProgramacion1;
	private float cantPorProgramacion2;
	private Collection<String> cSigla;
	private Collection<String> cRecibe;
	private Collection<String> cUnidad;
	private AutocompleteSuggestionProvider aspSigla;
	private AutocompleteSuggestionProvider aspRecibe;
	private AutocompleteSuggestionProvider aspUnidad;
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */

	@Autowired
	MacropartesService macropartesService;

	@Override
	public void enter(ViewChangeEvent event) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		stylos();
		llenaCbCiudades();
		llenaServiteca();
		llenaServiteca2();
		llenaCbMarca();
		llenaCbModelo();
		llenaCbox();
		select_serviteca.addValueChangeListener(e -> accionServiteca());
		select_serviteca.setImmediate(true);
		select_serviteca2.addValueChangeListener(e -> accionServiteca2());
		select_serviteca2.setImmediate(true);
		bt_guardar.addClickListener(e -> accionGuardar());
		tf_sigla.addBlurListener(e -> accionSigla());
		generaNumeroDeOrden();
		DateFormat fechaHora = new SimpleDateFormat("dd-MM-yyyy");
		String fechaString = fechaHora.format(new Date());
		tf_fecha.setValue(fechaString);
		tf_codigo.setEnabled(false);
		tf_nombreP.setEnabled(false);
		tf_stok.setEnabled(false);
		tf_stock2.setEnabled(false);
		tf_codigo2.setEnabled(false);
		tf_nombreP2.setEnabled(false);
		bt_buscar.addClickListener(e -> verInfoComuniPendientes());
		bt_buscar2.addClickListener(e -> verInfoComuniPendientes2());
		ta_observaciones.setRows(2);
		bt_limpiar.addClickListener(e -> limpiarPantalla());
		bt_buscarArs.addClickListener(e -> buscaArs());
		bt_nuevaArs.addClickListener(e -> nuevaArs());
		bt_nuevaArs.setEnabled(false);
		tf_desRef.addBlurListener(e -> buscarReferencia());
		tf_descRef2.addBlurListener(e -> buscarReferencia2());
		bt_reporte.addClickListener(e -> generarReporte());
		bt_reporte.setVisible(false);

		cSigla = macropartesService.getAllSiglas();
		aspSigla = new CollectionSuggestionProvider(cSigla, MatchMode.CONTAINS, true);
		tf_sigla.setSuggestionProvider(aspSigla);
		
		cRecibe = macropartesService.getAllRecibe();
		aspRecibe = new CollectionSuggestionProvider(cRecibe, MatchMode.CONTAINS, true);
		tf_quienRecibee.setSuggestionProvider(aspRecibe);

		cUnidad = macropartesService.getAllUnidad();
		aspUnidad = new CollectionSuggestionProvider(cUnidad, MatchMode.CONTAINS, true);
		tf_unidadAten.setSuggestionProvider(aspUnidad);
	}

	private void generarReporte() {
		
		//despuesDelGuardado();
	}

	private void buscarReferencia() {
		lisReferencia = macropartesService.buscarTodasLasReferencia("%"
				+ tf_desRef.getValue() + "%");
		if (!lisReferencia.isEmpty()) {
			for (Referencias x : lisReferencia) {
				tf_desRef.setValue(x.getReferencia());
				tf_nombreP.setValue(x.getNombre());
				tf_nombreP.setDescription(x.getNombre());
				tf_codigo.setValue(x.getCodigo());
				item1 = x.getItem();
				item1String = String.valueOf(x.getItem());
				buscarStock();
				break;

			}

		}
	}

	private void buscarReferencia2() {
		lisReferencia2 = macropartesService.buscarTodasLasReferencia("%"
				+ tf_descRef2.getValue() + "%");
		if (!lisReferencia2.isEmpty()) {
			for (Referencias x : lisReferencia2) {
				tf_descRef2.setValue(x.getReferencia());
				tf_nombreP2.setValue(x.getNombre());
				tf_nombreP2.setDescription(x.getNombre());
				tf_codigo2.setValue(x.getCodigo());
				item2 = x.getItem();
				item2String = String.valueOf(item2);
				buscarStock2();
				buscarStock2SinServiteca2();
				break;
			}

		}
	}

	private void nuevaArs() {
		limpiarPantalla();
		activarNuevaArs();
	}

	private void buscaArs() {
		wDetalleComunicacion = new Window("");
		wDetalleComunicacion.setWidth("80%");
		wDetalleComunicacion.setHeight("70%");
		wDetalleComunicacion.setContent(new buscarArs(macropartesService));
		wDetalleComunicacion.setModal(true);
		wDetalleComunicacion.center();
		wDetalleComunicacion.setClosable(true);
		wDetalleComunicacion.setResizable(true);
		// wDetalleComunicacion.addCloseListener(e ->
		// actualizaNotificaciones());
		UI.getCurrent().addWindow(wDetalleComunicacion);
	}

	private void limpiarPantalla() {
		select_cantidad2.setValue(null);
		tf_dot2.setValue("");
		tf_idLlantas.setValue("");
		tf_refCompro.setValue("");
		tf_sigla.setValue("");
		tf_numOrden.setValue("");
		select_serviteca.setValue(null);
		select_serviteca2.setValue(null);
		select_marca.setValue(null);
		select_linea.setValue(null);
		select_ciudad.setValue(null);
		select_instalacion.setValue(null);
		select_balanceo.setValue(null);
		select_alineacion.setValue(null);
		select_recepcion.setValue(null);
		select_marcacion.setValue(null);
		select_reportAlinea.setValue(null);
		select_neumatico.setValue(null);
		select_protector.setValue(null);
		select_selloMati.setValue(null);
		ta_observaciones.setValue("");
		tf_codigo.setValue("");
		tf_nombreP.setValue("");
		tf_codigo2.setValue("");
		tf_nombreP2.setValue("");
		tf_unidadAten.setValue("");
		tf_quienRecibee.setValue("");
		tf_desRef.setValue("");
		tf_diseno.setValue("");
		select_cantidad.setValue(null);
		tf_dot.setValue("");
		tf_idLlanta.setValue("");
		tf_descRef2.setValue("");
		tf_diseo2.setValue("");
		select_cantidad2.setValue(null);
		tf_dot2.setValue("");
		tf_idLlantas.setValue("");
		tf_stock2.setValue("");
		tf_stok.setValue("");

		generaNumeroDeOrden();
	}

	private void obtenerReferencia(Referencias ref) {
		UI.getCurrent().removeWindow(wDetalleComunicacion);
		tf_desRef.setValue(ref.getReferencia());
		tf_nombreP.setValue(ref.getNombre());
		tf_nombreP.setDescription(ref.getNombre());
		tf_codigo.setValue(ref.getCodigo());
		item1 = ref.getItem();
		buscarStock();

	}

	private void obtenerReferencia2(Referencias ref) {
		UI.getCurrent().removeWindow(wDetalleComunicacion);
		tf_descRef2.setValue(ref.getReferencia());
		tf_nombreP2.setValue(ref.getNombre());
		tf_nombreP2.setDescription(ref.getNombre());
		tf_codigo2.setValue(ref.getCodigo());
		item2 = ref.getItem();
		buscarStock2();
		buscarStock2SinServiteca2();
	}

	private void verInfoComuniPendientes() {
		// Notificacion notifica = (Notificacion) itemId;
		String referencia;
		wDetalleComunicacion = new Window("");
		wDetalleComunicacion.setWidth("50%");
		wDetalleComunicacion.setHeight("50%");
		wDetalleComunicacion.setContent(new buscarReferencia(
				macropartesService, tf_desRef.getValue(), consumerReferencia));
		wDetalleComunicacion.setModal(true);
		wDetalleComunicacion.center();
		wDetalleComunicacion.setClosable(true);
		wDetalleComunicacion.setResizable(true);
		// wDetalleComunicacion.addCloseListener(e ->
		// actualizaNotificaciones());
		UI.getCurrent().addWindow(wDetalleComunicacion);
	}

	private void verInfoComuniPendientes2() {
		// Notificacion notifica = (Notificacion) itemId;
		String referencia;
		wDetalleComunicacion = new Window("");
		wDetalleComunicacion.setWidth("50%");
		wDetalleComunicacion.setHeight("50%");
		wDetalleComunicacion
				.setContent(new buscarReferencia2(macropartesService,
						tf_descRef2.getValue(), consumerReferencia2));
		wDetalleComunicacion.setModal(true);
		wDetalleComunicacion.center();
		wDetalleComunicacion.setClosable(true);
		wDetalleComunicacion.setResizable(true);
		// wDetalleComunicacion.addCloseListener(e ->
		// actualizaNotificaciones());
		UI.getCurrent().addWindow(wDetalleComunicacion);
	}

	private void accionServiteca2() {
		if (select_serviteca2.getValue() != null) {
			String nombreServiteca = macropartesService
					.buscarNombreServiteca(select_serviteca2.getValue()
							.toString());
			select_serviteca2.setDescription(select_serviteca2.getValue()
					.toString() + " - " + nombreServiteca);
			buscarStock2();
		}

	}

	private void accionServiteca() {
		if (select_serviteca.getValue() != null) {
			String nombreServiteca = macropartesService
					.buscarNombreServiteca(select_serviteca.getValue()
							.toString());
			select_serviteca.setDescription(select_serviteca.getValue()
					.toString() + " - " + nombreServiteca);
			buscarStock();
		}

	}

	private void generaNumeroDeOrden() {
		Collection<NumeroDeOrden> numOrden;
		String numeOrden = null;
		numOrden = macropartesService.generarNumeroDeOrden(SiarpSession
				.getUsername());
		if (numOrden != null) {
			for (NumeroDeOrden b : numOrden) {
				numeOrden = b.getPrefijo() + "-" + b.getConsecutivoMasUno();
				tf_refCompro.setValue(numeOrden);
				break;

			}
		}
	}

	private void buscarStock2SinServiteca2() {
		Collection<Stock> stock;
		// int valorStock = 0;
		if (!tf_codigo2.isEmpty() && select_serviteca2.getValue() == null) {
			stock = macropartesService.buscarStock1(tf_codigo2.getValue(),
					select_serviteca.getValue().toString());
			if (!stock.isEmpty()) {
				for (Stock d : stock) {
					tf_stock2.setValue(d.getStock());
				}
			} else {
				tf_stock2.setValue("0");

			}
		}
		// return valorStock;
	}

	private void buscarStock2() {
		Collection<Stock> stock;
		// int valorStock = 0;
		if (!tf_codigo2.isEmpty() && select_serviteca2.getValue() != null) {
			stock = macropartesService.buscarStock1(tf_codigo2.getValue(),
					select_serviteca2.getValue().toString());
			if (!stock.isEmpty()) {
				for (Stock d : stock) {
					tf_stock2.setValue(d.getStock());
				}
			} else {
				tf_stock2.setValue("0");

			}
		}
		// return valorStock;
	}

	private void buscarStock() {
		Collection<Stock> stock;
		// int valorStock = 0;
		if (!tf_codigo.isEmpty() && select_serviteca.getValue() != null) {
			stock = macropartesService.buscarStock1(tf_codigo.getValue(),
					select_serviteca.getValue().toString());
			if (!stock.isEmpty()) {
				for (Stock d : stock) {
					tf_stok.setValue(d.getStock());
				}
			} else {
				tf_stok.setValue("0");

			}
		}
		// return valorStock;
	}

	private Collection<Referencias> buscaCodigoYNombreP() {
		Collection<Referencias> listReferencias = null;
		if (!tf_desRef.getValue().isEmpty()) {
			listReferencias = macropartesService.buscarCodigoNombreP(tf_desRef
					.getValue());
		}
		return listReferencias;
	}

	private void accionSigla() {
		Collection<Referencias> listReferencias = null;
		Collection<Programacion> itemsProgramacion = null;
		int i = 0;

		swItemPorProgramacion = 0;
		itemsProgramacion = macropartesService
				.buscarSiglaEnProgramacion(tf_sigla.getValue());
		if (!itemsProgramacion.isEmpty()) {
			swItemPorProgramacion = 1;
			for (Programacion x : itemsProgramacion) {
				if (i == 0) {
					tf_desRef.setValue(x.getReferencia());
					select_cantidad.setValue(String.valueOf(x.getCantidad()));
					item1 = x.getItem();
					item1String = String.valueOf(item1);
					cantPorProgramacion1 = x.getCantidad();
					listReferencias = buscaCodigoYNombreP();
					for (Referencias t : listReferencias) {
						tf_codigo.setValue(t.getCodigo());
						tf_nombreP.setValue(t.getNombre());
						tf_nombreP.setDescription(t.getNombre());
						buscarStock();
						break;
					}
					i++;
				} else {
					if (i == 1) {
						tf_descRef2.setValue(x.getReferencia());
						select_cantidad2.setValue(String.valueOf(x
								.getCantidad()));
						item2 = x.getItem();
						cantPorProgramacion2 = x.getCantidad();
						item2String = String.valueOf(item2);
						buscarStock2();
						buscarStock2SinServiteca2();
					}
				}

			}
		}

		accionesSiglaEncotrada();

	}

	private void accionesSiglaEncotrada() {
		select_serviteca.setEnabled(true);
		select_serviteca2.setEnabled(true);
	}

	private void accionesSiglaNoEncontrada() {
		select_serviteca.setValue(null);
		select_serviteca2.setValue(null);
		select_serviteca.setEnabled(false);
		select_serviteca2.setEnabled(false);
		tf_desRef.setValue("");
		select_cantidad.setValue(null);
		tf_codigo.setValue("");
		tf_nombreP.setValue("");
		tf_stock2.setValue("");
		tf_stok.setValue("");
	}

	private void accionGuardar() {
		int sw = 1;
		bt_nuevaArs.setEnabled(true);
		if (select_serviteca.getValue() == null) {
			sw = 0;
			Notification.show("Serviteca, es obligatoria", Type.ERROR_MESSAGE);
		} else {
			if (select_cantidad.getValue() == null) {
				sw = 0;
				Notification.show("Cantidad, Serviteca, es obligatoria",
						Type.ERROR_MESSAGE);
			} else {
				float cant1;
				if (select_cantidad.getValue() != null) {
					cant1 = Float.parseFloat(select_cantidad.getValue()
							.toString());
					if (select_cantidad.getValue().equals("0") || cant1 < 0) {
						sw = 0;
						Notification.show(
								"Cantidad no puede ser cero o menor que cero",
								Type.ERROR_MESSAGE);
					}
				}

				if (select_cantidad.getValue() != null && !tf_stok.isEmpty()) {// ojo
																				// esto
																				// lo
																				// cabie
																				// estaban
																				// en
																				// dos
																				// lineas
																				// diferentes
																				// las
																				// validaciones
					float cant = Float.parseFloat(select_cantidad.getValue()
							.toString());
					float stock1 = Float.parseFloat(tf_stok.getValue().trim());
					if (cant > stock1) {
						sw = 0;
						Notification.show(
								"Cantidad no puede ser mayor a stoc1",
								Type.ERROR_MESSAGE);
					}
				}

			}
			if (tf_desRef.isEmpty()) {
				sw = 0;
				Notification
						.show("Descripcion de la Referencia, Serviteca, es obligatoria",
								Type.ERROR_MESSAGE);
			}
		}// fin is serviteca

		if (tf_sigla.isEmpty()) {
			sw = 0;
			Notification.show("El campo sigla, es obligatoria",
					Type.ERROR_MESSAGE);
		}

		if (tf_numOrden.isEmpty()) {
			sw = 0;
			Notification.show("El campo Num. Orden, es obligatoria",
					Type.ERROR_MESSAGE);
		}

		if (tf_unidadAten.isEmpty()) {
			sw = 0;
			Notification.show("El campo Unidad atendida, es obligatoria",
					Type.ERROR_MESSAGE);
		}

		if (tf_quienRecibee.isEmpty()) {
			sw = 0;
			Notification.show("El campo quien recibe, es obligatoria",
					Type.ERROR_MESSAGE);
		}

		if (select_ciudad.getValue() == null) {
			sw = 0;
			Notification.show("El campo ciudad, es obligatoria",
					Type.ERROR_MESSAGE);
		}

		if (!tf_descRef2.isEmpty() || !tf_diseo2.isEmpty()
				|| select_cantidad2.getValue() != null || !tf_dot2.isEmpty()
				|| !tf_idLlantas.isEmpty()) {
			float cant2 = 0;
			cant2 = Float.parseFloat(select_cantidad2.getValue().toString());
			if (cant2 <= 0) {
				sw = 0;
				Notification
						.show("El campo cantidad de la referencia 2 , no puede ser cero ni menor que  cero. ",
								Type.ERROR_MESSAGE);
			}

		}
		// holaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		if (select_serviteca2.getValue() == null) {
			if (select_cantidad2.getValue() != null && tf_descRef2.isEmpty()) {
				sw = 0;
				Notification.show("Debe escoger la  referncia 2",
						Type.ERROR_MESSAGE);
			}
			if (select_cantidad2 == null && !tf_descRef2.isEmpty()) {
				sw = 0;
				Notification.show("Debe escoger la  cantidad 2",
						Type.ERROR_MESSAGE);
			}
			// sw = 0;
			// Notification.show("Serviteca, es obligatoria",
			// Type.ERROR_MESSAGE);
		} else {
			if (select_cantidad2.getValue() == null) {
				sw = 0;
				Notification.show("Cantidad2, es obligatoria",
						Type.ERROR_MESSAGE);
			} else {
				float cant1 = 0;
				if (select_cantidad2.getValue() != null) {
					cant1 = Float.parseFloat(select_cantidad2.getValue()
							.toString());
				}
				if (select_cantidad.getValue() != null) {
					if (select_cantidad.getValue().equals("0") || cant1 < 0) {
						sw = 0;
						Notification.show(
								"Cantidad no puede ser cero o menor que cero",
								Type.ERROR_MESSAGE);
					}
				}

				if (select_cantidad2.getValue() != null && !tf_stock2.isEmpty()) {
					float cant = Float.parseFloat(select_cantidad2.getValue()
							.toString()), stock1 = Float.parseFloat(tf_stock2
							.getValue());
					if (cant > stock1) {
						sw = 0;
						Notification.show(
								"Cantidad no puede ser mayor a stock2",
								Type.ERROR_MESSAGE);
					}
				}

			}
			if (tf_descRef2.isEmpty()) {
				sw = 0;
				Notification.show(
						"Descripcion de la Referencia2, es obligatoria",
						Type.ERROR_MESSAGE);
			}

			/*
			 * if(sw==1){ generaNumeroDeOrden();// ojo con esto... no va..... }
			 */

		}// fin is serviteca

		// if(!tf_numOrden.isEmpty()){
		if (swItemPorProgramacion == 1) {
			if (select_cantidad.getValue() != null) {
				if (Float.parseFloat(select_cantidad.getValue().toString()) > cantPorProgramacion1) {
					sw = 0;
					Notification
							.show("La cantidad no puede ser superior a lo programado",
									Type.ERROR_MESSAGE);
				}
			}
			if (select_cantidad2.getValue() != null
					&& cantPorProgramacion2 != 0) {
				if (Float.parseFloat(select_cantidad2.getValue().toString()) > cantPorProgramacion2) {
					sw = 0;
					Notification
							.show("La cantidad 2 no puede ser superior a lo programado",
									Type.ERROR_MESSAGE);
				}
			}

			if (select_cantidad2.getValue() != null && !tf_descRef2.isEmpty()
					&& select_cantidad.getValue() != null) {
				if ((Float.parseFloat(select_cantidad2.getValue().toString()) + Float
						.parseFloat(select_cantidad.getValue().toString())) > cantPorProgramacion1) {
					sw = 0;
					Notification
							.show("La cantidad 2 mas la cantidad no puede ser superior a lo programado",
									Type.ERROR_MESSAGE);
				}
			}

		}

		int existeNumOrden = macropartesService.buscarNumeroOrden(tf_numOrden
				.getValue());
		if (existeNumOrden > 0) {
			sw = 0;
			Notification.show("Numero de orden ya existe en la base de datos",
					Type.ERROR_MESSAGE);
		}
		// }
		if (tf_stok.isEmpty()) {
			sw = 0;
			Notification
					.show("Stock, no puede estar vacio", Type.ERROR_MESSAGE);
		}
		if (tf_desRef.getValue().equals(tf_descRef2.getValue())) {
			if (tf_codigo.getValue().equals(tf_codigo2.getValue())) {
				sw = 0;
				Notification
						.show("No se puede elegir el mismo codigo para la misma referencia...",
								Type.ERROR_MESSAGE);
			}
		}
		if (sw == 1) {
			DateFormat fechaHora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String fechaString = fechaHora.format(new Date());
			Ars ars = new Ars();
			ars.setItem1(item1);
			ars.setItem2(item2);
			if (item1String != null) {
				ars.setItem1String(item1String);
			} else {
				ars.setItem1String("");
			}
			if (item2String != null) {
				ars.setItem2String(item2String);
			} else {
				ars.setItem2String("");
			}

			ars.setFechaServicio(fechaString);
			ars.setNcom(tf_refCompro.getValue());// falta generarlo
			ars.setCiudad(select_ciudad.getValue().toString());// aqui me trae
																// el codigo
																// buscar el
																// nombre como
																// tal
			if (select_serviteca.getValue() != null) {
				String nombreServiteca = macropartesService
						.buscarNombreServiteca(select_serviteca.getValue()
								.toString());
				ars.setServiteca(nombreServiteca);// nombre
				ars.setCserviteca(select_serviteca.getValue().toString());// codigo
			}
			ars.setUnidad(tf_unidadAten.getValue());
			ars.setRecibe(tf_quienRecibee.getValue());
			ars.setSigla(tf_sigla.getValue());
			if (select_marca.getValue() != null) {
				ars.setMarca(select_marca.getValue().toString());
			} else {
				ars.setMarca("");
			}
			if (select_linea.getValue() != null) {
				ars.setLinea(select_linea.getValue().toString());
			} else {
				ars.setLinea("");
			}
			ars.setNorden(tf_numOrden.getValue());
			ars.setDesRef(tf_desRef.getValue());
			ars.setDiseno(tf_diseno.getValue());
			if (select_cantidad.getValue() != null) {
				ars.setCantidad(Float.parseFloat(select_cantidad.getValue()
						.toString()));
			}

			ars.setDot(tf_dot.getValue());
			ars.setIdllanta(tf_idLlanta.getValue());
			ars.setDesRef2(tf_descRef2.getValue());
			ars.setDiseno2(tf_diseo2.getValue());
			if (select_cantidad2.getValue() != null) {
				ars.setCantidad2(Float.parseFloat(select_cantidad2.getValue()
						.toString()));
			}
			ars.setDot2(tf_dot2.getValue());
			ars.setIdLlanta2(tf_idLlantas.getValue());
			if (select_instalacion.getValue() != null) {
				ars.setInstalacion(Integer.parseInt(select_instalacion
						.getValue().toString()));
			}
			if (select_balanceo.getValue() != null) {
				ars.setBalanceo(Integer.parseInt(select_balanceo.getValue()
						.toString()));
			}
			if (select_alineacion.getValue() != null) {
				ars.setAlineacion(Integer.parseInt(select_alineacion.getValue()
						.toString()));
			}
			if (select_recepcion.getValue() != null) {
				ars.setRecepcion(Integer.parseInt(select_recepcion.getValue()
						.toString()));
			}
			if (select_marcacion.getValue() != null) {
				ars.setMarcacion(Integer.parseInt(select_marcacion.getValue()
						.toString()));
			}
			if (select_reportAlinea.getValue() != null) {
				ars.setReportAlinea(Integer.parseInt(select_reportAlinea
						.getValue().toString()));
			}
			if (select_neumatico.getValue() != null) {
				ars.setCn(Integer.parseInt(select_neumatico.getValue()
						.toString()));
			}
			if (select_protector.getValue() != null) {
				ars.setCp(Integer.parseInt(select_protector.getValue()
						.toString()));
			}
			if (select_selloMati.getValue() != null) {
				ars.setCv(Integer.parseInt(select_selloMati.getValue()
						.toString()));
			}
			ars.setObservaciones(ta_observaciones.getValue());
			// ,SiarpSession.getMachine()
			ars.setUsuario(SiarpSession.getUsername());
			if (select_serviteca2.getValue() != null) {
				// ars.setServiteca2(select_serviteca2.getValue().toString());
				String nombreServiteca = macropartesService
						.buscarNombreServiteca(select_serviteca2.getValue()
								.toString());
				ars.setServiteca2(nombreServiteca);// nombre
				ars.setCserviteca2(select_serviteca2.getValue().toString());// codigo

			} else {
				ars.setServiteca2("");
				ars.setCserviteca2("");// codigo
			}
			ars.setCodigo(tf_codigo.getValue());
			ars.setCodigo2(tf_codigo2.getValue());
			ars.setNreferencia(tf_nombreP.getValue());
			ars.setNreferencia2(tf_nombreP2.getValue());
			actualizarStock();
			int res = macropartesService.guardarArs(ars, stock, stock2,
					swParaDecidirStock, swItemPorProgramacion);
			if (res > 0) {
				Notification.show("insertado base de datos",
						Type.HUMANIZED_MESSAGE);
			} else {
				Notification.show("No insertado", Type.ERROR_MESSAGE);
			}
			// REPORTE
			ReportARS report = new ReportARS(macropartesService,
					tf_refCompro.getValue(), "F1 - REMISION - ");
			UI.getCurrent().addWindow(report);
			despuesDelGuardado();

		}
	}

	private void despuesDelGuardado() {
		select_cantidad2.setEnabled(false);
		tf_dot2.setEnabled(false);
		tf_idLlantas.setEnabled(false);
		bt_guardar.setEnabled(false);
		bt_limpiar.setEnabled(false);
		tf_refCompro.setEnabled(false);
		select_ciudad.setEnabled(false);
		select_serviteca.setEnabled(false);
		tf_sigla.setEnabled(false);
		select_marca.setEnabled(false);
		select_linea.setEnabled(false);
		tf_numOrden.setEnabled(false);
		select_serviteca2.setEnabled(false);
		select_instalacion.setEnabled(false);
		select_balanceo.setEnabled(false);
		select_alineacion.setEnabled(false);
		select_recepcion.setEnabled(false);
		select_marcacion.setEnabled(false);
		select_reportAlinea.setEnabled(false);
		tf_codigo.setEnabled(false);
		tf_nombreP.setEnabled(false);
		tf_unidadAten.setEnabled(false);
		tf_quienRecibee.setEnabled(false);
		tf_desRef.setEnabled(false);
		tf_diseno.setEnabled(false);
		select_cantidad.setEnabled(false);
		tf_dot.setEnabled(false);
		tf_idLlanta.setEnabled(false);
		tf_descRef2.setEnabled(false);
		tf_diseo2.setEnabled(false);

		select_cantidad2.setEnabled(false);
		tf_dot2.setEnabled(false);
		tf_idLlantas.setEnabled(false);
		tf_stock2.setEnabled(false);
		tf_stok.setEnabled(false);
		select_neumatico.setEnabled(false);
		select_protector.setEnabled(false);
		select_selloMati.setEnabled(false);
		ta_observaciones.setEnabled(false);

	}

	private void activarNuevaArs() {
		select_cantidad2.setEnabled(true);
		tf_dot2.setEnabled(true);
		tf_idLlantas.setEnabled(true);
		bt_guardar.setEnabled(true);
		bt_limpiar.setEnabled(true);
		tf_refCompro.setEnabled(true);
		select_ciudad.setEnabled(true);
		select_serviteca.setEnabled(true);
		tf_sigla.setEnabled(true);
		select_marca.setEnabled(true);
		select_linea.setEnabled(true);
		tf_numOrden.setEnabled(true);
		select_serviteca2.setEnabled(true);
		select_instalacion.setEnabled(true);
		select_balanceo.setEnabled(true);
		select_alineacion.setEnabled(true);
		select_recepcion.setEnabled(true);
		select_marcacion.setEnabled(true);
		select_reportAlinea.setEnabled(true);
		tf_unidadAten.setEnabled(true);
		tf_quienRecibee.setEnabled(true);
		tf_desRef.setEnabled(true);
		tf_diseno.setEnabled(true);
		select_cantidad.setEnabled(true);
		tf_dot.setEnabled(true);
		tf_idLlanta.setEnabled(true);
		tf_descRef2.setEnabled(true);
		tf_diseo2.setEnabled(true);

		select_cantidad2.setEnabled(true);
		tf_dot2.setEnabled(true);
		tf_idLlantas.setEnabled(true);
		tf_stock2.setEnabled(true);
		tf_stok.setEnabled(true);
		select_neumatico.setEnabled(true);
		select_protector.setEnabled(true);
		select_selloMati.setEnabled(true);
		ta_observaciones.setEnabled(true);

	}

	private void actualizarStock() {
		if (select_serviteca.getValue() != null
				&& select_serviteca2.getValue() == null) {
			if (select_cantidad.getValue() != null
					&& !tf_desRef.getValue().isEmpty()
					&& tf_descRef2.getValue().isEmpty()
					&& select_cantidad2.getValue() == null
					&& !tf_stok.isEmpty()) {
				stock = Float.parseFloat(tf_stok.getValue())
						- Float.parseFloat(select_cantidad.getValue()
								.toString());
				// macropartesService.actualizaStock(tf_codigo.getValue().toString(),select_serviteca.getValue().toString(),stock);
				swParaDecidirStock = 1;
			}

			if (select_cantidad.getValue() != null
					&& !tf_desRef.getValue().isEmpty()
					&& !tf_descRef2.getValue().isEmpty()
					&& select_cantidad2.getValue() != null
					&& !tf_stok.isEmpty()) {
				System.out.println("condicion valida stock2");
				stock = Float.parseFloat(tf_stok.getValue())
						- Float.parseFloat(select_cantidad.getValue()
								.toString());
				stock2 = Float.parseFloat(tf_stock2.getValue())
						- Float.parseFloat(select_cantidad2.getValue()
								.toString());
				// macropartesService.actualizaStock(tf_codigo.getValue().toString(),select_serviteca.getValue().toString(),stock);
				swParaDecidirStock = 1;
			}

		} else {
			if (select_serviteca.getValue() != null
					&& select_serviteca2.getValue() != null) {
				if (select_cantidad.getValue() != null
						&& select_cantidad2.getValue() != null
						&& !tf_desRef.isEmpty() && !tf_descRef2.isEmpty()
						&& !tf_stok.isEmpty() && !tf_stock2.isEmpty()) {
					stock = Float.parseFloat(tf_stok.getValue())
							- Float.parseFloat(select_cantidad.getValue()
									.toString());
					stock2 = Float.parseFloat(tf_stock2.getValue())
							- Float.parseFloat(select_cantidad2.getValue()
									.toString());
					// macropartesService.actualizaStock(tf_codigo.getValue().toString(),select_serviteca.getValue().toString(),stock);
					// macropartesService.actualizaStock(tf_codigo2.getValue().toString(),select_serviteca2.getValue().toString(),stock2);
					swParaDecidirStock = 2;
				}
			}
		}

	}

	public void llenaCbox() {
		select_alineacion.addItems("1", "2", "3", "4", "5", "6");
		select_instalacion.addItems("1", "2", "3", "4", "5", "6");
		select_balanceo.addItems("1", "2", "3", "4", "5", "6");
		select_recepcion.addItems("1", "2", "3", "4", "5", "6");
		select_marcacion.addItems("1", "2", "3", "4", "5", "6");
		select_reportAlinea.addItems("1", "2", "3", "4", "5", "6");
		select_selloMati.addItems("1", "2", "3", "4", "5", "6");
		select_neumatico.addItems("1", "2", "3", "4", "5", "6");
		select_protector.addItems("1", "2", "3", "4", "5", "6");
		select_cantidad.addItems("1", "2", "3", "4", "5", "6");
		select_cantidad2.addItems("1", "2", "3", "4", "5", "6");
	}

	public void stylos() {
		lblForma.addStyleName(SiarpTheme.TITULO2);
		tf_refCompro.addStyleName(SiarpTheme.TEXT_FIELD_MASIVOML_ROJO);
		tf_refCompro.setEnabled(false);
		bt_guardar.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_guardar.setIcon(FontAwesome.SAVE);
		bt_guardar.setDescription("GUARDAR ARS");
		bt_guardar.setCaption("");
		bt_buscarArs.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_buscarArs.setIcon(FontAwesome.SEARCH);
		bt_buscarArs.setDescription("BUSCAR ARS");
		bt_buscarArs.setCaption("");
		bt_buscar.setIcon(FontAwesome.SEARCH);
		bt_buscar.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_buscar.setDescription("Buscar Referencia");
		bt_buscar.setCaption("");
		bt_buscar2.setIcon(FontAwesome.SEARCH);
		bt_buscar2.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_buscar2.setDescription("Buscar Referencia 2");
		bt_buscar2.setCaption("");
		bt_limpiar.setIcon(FontAwesome.REFRESH);
		bt_limpiar.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_limpiar.setDescription("lIMPIAR PANTALLA");
		bt_limpiar.setCaption("");
		bt_nuevaArs.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_nuevaArs.setIcon(FontAwesome.FILE_O);
		bt_nuevaArs.setDescription("NUEVA ARS");
		bt_nuevaArs.setCaption("");
		bt_reporte.setIcon(FontAwesome.PRINT);
		bt_reporte.addStyleName(SiarpTheme.BUTTON_FRIENDLY);
		bt_reporte.setCaption("");
		tf_fecha.setEnabled(false);
		

		gridLayout_4.setColumnExpandRatio(0, 0.8f);
		gridLayout_4.setColumnExpandRatio(1, 0.5f);
		gridLayout_4.setColumnExpandRatio(2, 0.5f);
		gridLayout_1.setColumnExpandRatio(1, 1.0f);
		gridLayout_1.setColumnExpandRatio(0, 0.08f);
		gridLayout_12.setColumnExpandRatio(1, 1.0f);
		gridLayout_12.setColumnExpandRatio(0, 0.11f);

		// panel_4.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_botones.addStyleName(SiarpTheme.PANEL_BORDERLESS);
		panel_5.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_2.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_general.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_informacionEntidad.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_infoVehiculo.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		panel_observaciones.addStyleName(SiarpTheme.PANEL_HEADER_GREEN);
		// panel_4.addStyleName(SiarpTheme.PANEL_BORDERLESS);
		panel_1.addStyleName(SiarpTheme.PANEL_BORDERLESS);

	}

	/*
	 * public prueba2() { buildMainLayout(); setCompositionRoot(mainLayout);
	 * //getUI().getNavigator().navigateTo("Afiliaciones/consultaEmpresa"); //
	 * TODO add user code here }
	 */

	private void accion() {
		llenaServiteca();
		llenaServiteca2();
	}

	public void llenaCbModelo() {
		beanConModelo = new BeanContainer<String, Modelo>(Modelo.class);
		beanConModelo.setBeanIdProperty("nombre");
		beanConModelo.addAll(macropartesService.buscarModelo());
		select_linea.setContainerDataSource(beanConModelo);
		select_linea.setItemCaptionPropertyId("nombre");
		select_linea.setContainerDataSource(beanConModelo);
	}

	public void llenaCbMarca() {
		beanConMarca = new BeanContainer<String, Marca>(Marca.class);
		beanConMarca.setBeanIdProperty("nombre");
		beanConMarca.addAll(macropartesService.buscarMarca());
		select_marca.setContainerDataSource(beanConMarca);
		select_marca.setItemCaptionPropertyId("nombre");
		select_marca.setContainerDataSource(beanConMarca);
	}

	public void llenaServiteca() {
		beanConServiteca = new BeanContainer<String, Serviteca>(Serviteca.class);
		beanConServiteca.setBeanIdProperty("codigo");
		// if(select_ciudad.getValue()!=null){
		beanConServiteca.addAll(macropartesService.buscarServiteca("1"));
		select_serviteca.setContainerDataSource(beanConServiteca);
		select_serviteca.setItemCaptionPropertyId("nombre");
		select_serviteca.setContainerDataSource(beanConServiteca);
		// }

	}

	public void llenaServiteca2() {
		beanConServiteca2 = new BeanContainer<String, Serviteca>(
				Serviteca.class);
		beanConServiteca2.setBeanIdProperty("codigo");
		// if(select_ciudad.getValue()!=null){
		beanConServiteca2.addAll(macropartesService.buscarServiteca("1"));
		select_serviteca2.setContainerDataSource(beanConServiteca2);
		select_serviteca2.setItemCaptionPropertyId("nombre");
		select_serviteca2.setContainerDataSource(beanConServiteca2);
		// }

	}

	public void llenaCbCiudades() {
		beanConCiudades = new BeanContainer<String, Ciudades>(Ciudades.class);
		beanConCiudades.setBeanIdProperty("nombre");
		beanConCiudades.addAll(macropartesService.buscarCiudades());
		select_ciudad.setContainerDataSource(beanConCiudades);
		select_ciudad.setItemCaptionPropertyId("nombre");
		select_ciudad.setContainerDataSource(beanConCiudades);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// lblForma
		lblForma = new Label();
		lblForma.setImmediate(false);
		lblForma.setWidth("-1px");
		lblForma.setHeight("-1px");
		lblForma.setValue("ARS");
		mainLayout.addComponent(lblForma);
		
		// panel_botones
		panel_botones = buildPanel_botones();
		mainLayout.addComponent(panel_botones);
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		
		// panel_5
		panel_5 = buildPanel_5();
		mainLayout.addComponent(panel_5);
		
		// panel_observaciones
		panel_observaciones = buildPanel_observaciones();
		mainLayout.addComponent(panel_observaciones);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_botones() {
		// common part: create layout
		panel_botones = new Panel();
		panel_botones.setImmediate(false);
		panel_botones.setWidth("100.0%");
		panel_botones.setHeight("-1px");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		panel_botones.setContent(horizontalLayout_1);
		
		return panel_botones;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("50.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// bt_limpiar
		bt_limpiar = new Button();
		bt_limpiar.setCaption("Button");
		bt_limpiar.setImmediate(true);
		bt_limpiar.setWidth("-1px");
		bt_limpiar.setHeight("-1px");
		horizontalLayout_1.addComponent(bt_limpiar);
		
		// bt_guardar
		bt_guardar = new Button();
		bt_guardar.setCaption("Button");
		bt_guardar.setImmediate(true);
		bt_guardar.setWidth("-1px");
		bt_guardar.setHeight("-1px");
		horizontalLayout_1.addComponent(bt_guardar);
		
		// bt_reporte
		bt_reporte = new Button();
		bt_reporte.setCaption("Button");
		bt_reporte.setImmediate(true);
		bt_reporte.setWidth("-1px");
		bt_reporte.setHeight("-1px");
		horizontalLayout_1.addComponent(bt_reporte);
		
		// bt_nuevaArs
		bt_nuevaArs = new Button();
		bt_nuevaArs.setCaption("Button");
		bt_nuevaArs.setImmediate(true);
		bt_nuevaArs.setWidth("-1px");
		bt_nuevaArs.setHeight("-1px");
		horizontalLayout_1.addComponent(bt_nuevaArs);
		
		// bt_buscarArs
		bt_buscarArs = new Button();
		bt_buscarArs.setCaption("Button");
		bt_buscarArs.setImmediate(true);
		bt_buscarArs.setWidth("-1px");
		bt_buscarArs.setHeight("-1px");
		horizontalLayout_1.addComponent(bt_buscarArs);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("-1px");
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		panel_1.setContent(verticalLayout_3);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);
		
		// gridLayout_4
		gridLayout_4 = buildGridLayout_4();
		verticalLayout_3.addComponent(gridLayout_4);
		
		return verticalLayout_3;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_4() {
		// common part: create layout
		gridLayout_4 = new GridLayout();
		gridLayout_4.setImmediate(false);
		gridLayout_4.setWidth("100.0%");
		gridLayout_4.setHeight("-1px");
		gridLayout_4.setMargin(false);
		gridLayout_4.setSpacing(true);
		gridLayout_4.setColumns(3);
		
		// verticalLayout_7
		verticalLayout_7 = buildVerticalLayout_7();
		gridLayout_4.addComponent(verticalLayout_7, 0, 0);
		
		// panel_infoVehiculo
		panel_infoVehiculo = buildPanel_infoVehiculo();
		gridLayout_4.addComponent(panel_infoVehiculo, 1, 0);
		
		// panel_2
		panel_2 = buildPanel_2();
		gridLayout_4.addComponent(panel_2, 2, 0);
		
		return gridLayout_4;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_7() {
		// common part: create layout
		verticalLayout_7 = new VerticalLayout();
		verticalLayout_7.setImmediate(false);
		verticalLayout_7.setWidth("100.0%");
		verticalLayout_7.setHeight("-1px");
		verticalLayout_7.setMargin(false);
		
		// panel_general
		panel_general = buildPanel_general();
		verticalLayout_7.addComponent(panel_general);
		
		// panel_informacionEntidad
		panel_informacionEntidad = buildPanel_informacionEntidad();
		verticalLayout_7.addComponent(panel_informacionEntidad);
		
		return verticalLayout_7;
	}

	@AutoGenerated
	private Panel buildPanel_general() {
		// common part: create layout
		panel_general = new Panel();
		panel_general.setCaption("Informacion General");
		panel_general.setImmediate(false);
		panel_general.setWidth("100.0%");
		panel_general.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_general.setContent(verticalLayout_2);
		
		return panel_general;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// gridLayout_5
		gridLayout_5 = buildGridLayout_5();
		verticalLayout_2.addComponent(gridLayout_5);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_5() {
		// common part: create layout
		gridLayout_5 = new GridLayout();
		gridLayout_5.setImmediate(false);
		gridLayout_5.setWidth("100.0%");
		gridLayout_5.setHeight("-1px");
		gridLayout_5.setMargin(false);
		gridLayout_5.setSpacing(true);
		gridLayout_5.setColumns(2);
		gridLayout_5.setRows(2);
		
		// tf_fecha
		tf_fecha = new TextField();
		tf_fecha.setCaption("Fecha Servicio:");
		tf_fecha.setImmediate(false);
		tf_fecha.setWidth("100px");
		tf_fecha.setHeight("-1px");
		gridLayout_5.addComponent(tf_fecha, 0, 0);
		
		// tf_refCompro
		tf_refCompro = new TextField();
		tf_refCompro.setCaption("Referencia Comprobante");
		tf_refCompro.setImmediate(false);
		tf_refCompro.setWidth("100px");
		tf_refCompro.setHeight("-1px");
		gridLayout_5.addComponent(tf_refCompro, 1, 0);
		
		// select_ciudad
		select_ciudad = new NativeSelect();
		select_ciudad.setCaption("Ciudad");
		select_ciudad.setImmediate(false);
		select_ciudad.setWidth("200px");
		select_ciudad.setHeight("-1px");
		gridLayout_5.addComponent(select_ciudad, 0, 1);
		
		// select_serviteca
		select_serviteca = new NativeSelect();
		select_serviteca.setCaption("Serviteca");
		select_serviteca.setImmediate(false);
		select_serviteca.setWidth("200px");
		select_serviteca.setHeight("-1px");
		gridLayout_5.addComponent(select_serviteca, 1, 1);
		
		return gridLayout_5;
	}

	@AutoGenerated
	private Panel buildPanel_informacionEntidad() {
		// common part: create layout
		panel_informacionEntidad = new Panel();
		panel_informacionEntidad.setCaption("Informacón Entidad");
		panel_informacionEntidad.setImmediate(false);
		panel_informacionEntidad.setWidth("100.0%");
		panel_informacionEntidad.setHeight("-1px");
		
		// horizontalLayout_4
		horizontalLayout_4 = buildHorizontalLayout_4();
		panel_informacionEntidad.setContent(horizontalLayout_4);
		
		return panel_informacionEntidad;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_4() {
		// common part: create layout
		horizontalLayout_4 = new HorizontalLayout();
		horizontalLayout_4.setImmediate(false);
		horizontalLayout_4.setWidth("100.0%");
		horizontalLayout_4.setHeight("-1px");
		horizontalLayout_4.setMargin(false);
		
		// gridLayout_9
		gridLayout_9 = buildGridLayout_9();
		horizontalLayout_4.addComponent(gridLayout_9);
		
		return horizontalLayout_4;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_9() {
		// common part: create layout
		gridLayout_9 = new GridLayout();
		gridLayout_9.setImmediate(false);
		gridLayout_9.setWidth("100.0%");
		gridLayout_9.setHeight("-1px");
		gridLayout_9.setMargin(false);
		gridLayout_9.setColumns(2);
		gridLayout_9.setRows(4);
		
		// label_unidadAtendida
		label_unidadAtendida = new Label();
		label_unidadAtendida.setImmediate(false);
		label_unidadAtendida.setWidth("-1px");
		label_unidadAtendida.setHeight("-1px");
		label_unidadAtendida.setValue("Unidad Atendida:");
		gridLayout_9.addComponent(label_unidadAtendida, 0, 1);
		
		// tf_unidadAten
		tf_unidadAten = new AutocompleteTextField();
		tf_unidadAten.setImmediate(false);
		tf_unidadAten.setWidth("90.0%");
		tf_unidadAten.setHeight("-1px");
		gridLayout_9.addComponent(tf_unidadAten, 1, 1);
		
		// label_persReceibe
		label_persReceibe = new Label();
		label_persReceibe.setImmediate(false);
		label_persReceibe.setWidth("-1px");
		label_persReceibe.setHeight("-1px");
		label_persReceibe.setValue("Persona que Recibe:");
		gridLayout_9.addComponent(label_persReceibe, 0, 2);
		
		// tf_quienRecibee
		tf_quienRecibee = new AutocompleteTextField();
		tf_quienRecibee.setImmediate(false);
		tf_quienRecibee.setWidth("90.0%");
		tf_quienRecibee.setHeight("-1px");
		gridLayout_9.addComponent(tf_quienRecibee, 1, 2);
		
		return gridLayout_9;
	}

	@AutoGenerated
	private Panel buildPanel_infoVehiculo() {
		// common part: create layout
		panel_infoVehiculo = new Panel();
		panel_infoVehiculo.setCaption("Información Véhiculo/Orden");
		panel_infoVehiculo.setImmediate(false);
		panel_infoVehiculo.setWidth("100.0%");
		panel_infoVehiculo.setHeight("100.0%");
		
		// verticalLayout_4
		verticalLayout_4 = buildVerticalLayout_4();
		panel_infoVehiculo.setContent(verticalLayout_4);
		
		return panel_infoVehiculo;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_4() {
		// common part: create layout
		verticalLayout_4 = new VerticalLayout();
		verticalLayout_4.setImmediate(false);
		verticalLayout_4.setWidth("100.0%");
		verticalLayout_4.setHeight("-1px");
		verticalLayout_4.setMargin(false);
		
		// gridLayout_6
		gridLayout_6 = buildGridLayout_6();
		verticalLayout_4.addComponent(gridLayout_6);
		
		return verticalLayout_4;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_6() {
		// common part: create layout
		gridLayout_6 = new GridLayout();
		gridLayout_6.setImmediate(false);
		gridLayout_6.setWidth("100.0%");
		gridLayout_6.setHeight("-1px");
		gridLayout_6.setMargin(false);
		gridLayout_6.setSpacing(true);
		gridLayout_6.setColumns(2);
		gridLayout_6.setRows(5);
		
		// label_sigla
		label_sigla = new Label();
		label_sigla.setImmediate(false);
		label_sigla.setWidth("-1px");
		label_sigla.setHeight("-1px");
		label_sigla.setValue("Sigla:");
		gridLayout_6.addComponent(label_sigla, 0, 0);
		
		// tf_sigla
		tf_sigla = new AutocompleteTextField();
		tf_sigla.setImmediate(false);
		tf_sigla.setWidth("-1px");
		tf_sigla.setHeight("-1px");
		gridLayout_6.addComponent(tf_sigla, 1, 0);
		
		// label_marca
		label_marca = new Label();
		label_marca.setImmediate(false);
		label_marca.setWidth("-1px");
		label_marca.setHeight("-1px");
		label_marca.setValue("Marca:");
		gridLayout_6.addComponent(label_marca, 0, 1);
		
		// select_marca
		select_marca = new NativeSelect();
		select_marca.setImmediate(false);
		select_marca.setWidth("120px");
		select_marca.setHeight("-1px");
		gridLayout_6.addComponent(select_marca, 1, 1);
		
		// label_linea
		label_linea = new Label();
		label_linea.setImmediate(false);
		label_linea.setWidth("-1px");
		label_linea.setHeight("-1px");
		label_linea.setValue("Linea:");
		gridLayout_6.addComponent(label_linea, 0, 2);
		
		// select_linea
		select_linea = new NativeSelect();
		select_linea.setImmediate(false);
		select_linea.setWidth("-1px");
		select_linea.setHeight("-1px");
		gridLayout_6.addComponent(select_linea, 1, 2);
		
		// label_numOrden
		label_numOrden = new Label();
		label_numOrden.setImmediate(false);
		label_numOrden.setWidth("-1px");
		label_numOrden.setHeight("-1px");
		label_numOrden.setValue("Num. Orden:");
		gridLayout_6.addComponent(label_numOrden, 0, 3);
		
		// tf_numOrden
		tf_numOrden = new TextField();
		tf_numOrden.setImmediate(false);
		tf_numOrden.setWidth("100px");
		tf_numOrden.setHeight("-1px");
		gridLayout_6.addComponent(tf_numOrden, 1, 3);
		
		// label_serviteca2
		label_serviteca2 = new Label();
		label_serviteca2.setImmediate(false);
		label_serviteca2.setWidth("-1px");
		label_serviteca2.setHeight("-1px");
		label_serviteca2.setValue("Serviteca 2:");
		gridLayout_6.addComponent(label_serviteca2, 0, 4);
		
		// select_serviteca2
		select_serviteca2 = new NativeSelect();
		select_serviteca2.setImmediate(false);
		select_serviteca2.setWidth("180px");
		select_serviteca2.setHeight("-1px");
		gridLayout_6.addComponent(select_serviteca2, 1, 4);
		
		return gridLayout_6;
	}

	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setCaption("Servicios Recibidos");
		panel_2.setImmediate(false);
		panel_2.setWidth("100.0%");
		panel_2.setHeight("100.0%");
		
		// verticalLayout_6
		verticalLayout_6 = buildVerticalLayout_6();
		panel_2.setContent(verticalLayout_6);
		
		return panel_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_6() {
		// common part: create layout
		verticalLayout_6 = new VerticalLayout();
		verticalLayout_6.setImmediate(false);
		verticalLayout_6.setWidth("100.0%");
		verticalLayout_6.setHeight("-1px");
		verticalLayout_6.setMargin(false);
		verticalLayout_6.setSpacing(true);
		
		// gridLayout_7
		gridLayout_7 = buildGridLayout_7();
		verticalLayout_6.addComponent(gridLayout_7);
		
		return verticalLayout_6;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_7() {
		// common part: create layout
		gridLayout_7 = new GridLayout();
		gridLayout_7.setImmediate(false);
		gridLayout_7.setWidth("100.0%");
		gridLayout_7.setHeight("-1px");
		gridLayout_7.setMargin(false);
		gridLayout_7.setColumns(3);
		gridLayout_7.setRows(2);
		
		// select_instalacion
		select_instalacion = new NativeSelect();
		select_instalacion.setCaption("Instalación");
		select_instalacion.setImmediate(false);
		select_instalacion.setWidth("-1px");
		select_instalacion.setHeight("-1px");
		gridLayout_7.addComponent(select_instalacion, 0, 0);
		
		// select_balanceo
		select_balanceo = new NativeSelect();
		select_balanceo.setCaption("Balanceo");
		select_balanceo.setImmediate(false);
		select_balanceo.setWidth("-1px");
		select_balanceo.setHeight("-1px");
		gridLayout_7.addComponent(select_balanceo, 1, 0);
		
		// select_alineacion
		select_alineacion = new NativeSelect();
		select_alineacion.setCaption("Alineación");
		select_alineacion.setImmediate(false);
		select_alineacion.setWidth("-1px");
		select_alineacion.setHeight("-1px");
		gridLayout_7.addComponent(select_alineacion, 2, 0);
		
		// select_recepcion
		select_recepcion = new NativeSelect();
		select_recepcion.setCaption("Recepción");
		select_recepcion.setImmediate(false);
		select_recepcion.setWidth("-1px");
		select_recepcion.setHeight("-1px");
		gridLayout_7.addComponent(select_recepcion, 0, 1);
		
		// select_marcacion
		select_marcacion = new NativeSelect();
		select_marcacion.setCaption("Marcación");
		select_marcacion.setImmediate(false);
		select_marcacion.setWidth("-1px");
		select_marcacion.setHeight("-1px");
		gridLayout_7.addComponent(select_marcacion, 1, 1);
		
		// select_reportAlinea
		select_reportAlinea = new NativeSelect();
		select_reportAlinea.setCaption("Report. Alinea");
		select_reportAlinea.setImmediate(false);
		select_reportAlinea.setWidth("-1px");
		select_reportAlinea.setHeight("-1px");
		gridLayout_7.addComponent(select_reportAlinea, 2, 1);
		
		return gridLayout_7;
	}

	@AutoGenerated
	private Panel buildPanel_5() {
		// common part: create layout
		panel_5 = new Panel();
		panel_5.setCaption("Llantas y Elementos Entregados.");
		panel_5.setImmediate(false);
		panel_5.setWidth("100.0%");
		panel_5.setHeight("-1px");
		
		// gridLayout_3
		gridLayout_3 = buildGridLayout_3();
		panel_5.setContent(gridLayout_3);
		
		return panel_5;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_3() {
		// common part: create layout
		gridLayout_3 = new GridLayout();
		gridLayout_3.setImmediate(false);
		gridLayout_3.setWidth("100.0%");
		gridLayout_3.setHeight("-1px");
		gridLayout_3.setMargin(false);
		gridLayout_3.setSpacing(true);
		gridLayout_3.setColumns(3);
		
		// panel_3
		panel_3 = buildPanel_3();
		gridLayout_3.addComponent(panel_3, 0, 0);
		
		// panel_4
		panel_4 = buildPanel_4();
		gridLayout_3.addComponent(panel_4, 1, 0);
		
		// panel_13
		panel_13 = buildPanel_13();
		gridLayout_3.addComponent(panel_13, 2, 0);
		gridLayout_3.setComponentAlignment(panel_13, new Alignment(48));
		
		return gridLayout_3;
	}

	@AutoGenerated
	private Panel buildPanel_3() {
		// common part: create layout
		panel_3 = new Panel();
		panel_3.setImmediate(false);
		panel_3.setWidth("-1px");
		panel_3.setHeight("-1px");
		
		// verticalLayout_8
		verticalLayout_8 = buildVerticalLayout_8();
		panel_3.setContent(verticalLayout_8);
		
		return panel_3;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_8() {
		// common part: create layout
		verticalLayout_8 = new VerticalLayout();
		verticalLayout_8.setImmediate(false);
		verticalLayout_8.setWidth("100.0%");
		verticalLayout_8.setHeight("-1px");
		verticalLayout_8.setMargin(false);
		
		// gridLayout_10
		gridLayout_10 = buildGridLayout_10();
		verticalLayout_8.addComponent(gridLayout_10);
		verticalLayout_8.setExpandRatio(gridLayout_10, 1.0f);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_8.addComponent(gridLayout_1);
		
		return verticalLayout_8;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_10() {
		// common part: create layout
		gridLayout_10 = new GridLayout();
		gridLayout_10.setImmediate(false);
		gridLayout_10.setWidth("100.0%");
		gridLayout_10.setHeight("-1px");
		gridLayout_10.setMargin(false);
		gridLayout_10.setColumns(4);
		gridLayout_10.setRows(5);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Desc. Refer:");
		gridLayout_10.addComponent(label_1, 0, 0);
		
		// tf_desRef
		tf_desRef = new TextField();
		tf_desRef.setImmediate(false);
		tf_desRef.setWidth("-1px");
		tf_desRef.setHeight("-1px");
		gridLayout_10.addComponent(tf_desRef, 1, 0);
		
		// bt_buscar
		bt_buscar = new Button();
		bt_buscar.setCaption("Button");
		bt_buscar.setImmediate(true);
		bt_buscar.setWidth("-1px");
		bt_buscar.setHeight("-1px");
		gridLayout_10.addComponent(bt_buscar, 3, 0);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Diseño:");
		gridLayout_10.addComponent(label_2, 0, 1);
		
		// tf_diseno
		tf_diseno = new TextField();
		tf_diseno.setImmediate(false);
		tf_diseno.setWidth("-1px");
		tf_diseno.setHeight("-1px");
		gridLayout_10.addComponent(tf_diseno, 1, 1);
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Cantidad:");
		gridLayout_10.addComponent(label_3, 0, 2);
		
		// select_cantidad
		select_cantidad = new NativeSelect();
		select_cantidad.setImmediate(true);
		select_cantidad.setWidth("50px");
		select_cantidad.setHeight("-1px");
		gridLayout_10.addComponent(select_cantidad, 1, 2);
		
		// label_16
		label_16 = new Label();
		label_16.setImmediate(false);
		label_16.setWidth("-1px");
		label_16.setHeight("-1px");
		label_16.setValue("Stock");
		gridLayout_10.addComponent(label_16, 2, 2);
		gridLayout_10.setComponentAlignment(label_16, new Alignment(34));
		
		// tf_stok
		tf_stok = new TextField();
		tf_stok.setImmediate(false);
		tf_stok.setWidth("50px");
		tf_stok.setHeight("-1px");
		gridLayout_10.addComponent(tf_stok, 3, 2);
		gridLayout_10.setComponentAlignment(tf_stok, new Alignment(48));
		
		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("Dot:");
		gridLayout_10.addComponent(label_4, 0, 3);
		
		// tf_dot
		tf_dot = new TextField();
		tf_dot.setImmediate(false);
		tf_dot.setWidth("-1px");
		tf_dot.setHeight("-1px");
		gridLayout_10.addComponent(tf_dot, 1, 3);
		
		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("Id. Llanta");
		gridLayout_10.addComponent(label_5, 0, 4);
		
		// tf_idLlanta
		tf_idLlanta = new TextField();
		tf_idLlanta.setImmediate(false);
		tf_idLlanta.setWidth("-1px");
		tf_idLlanta.setHeight("-1px");
		gridLayout_10.addComponent(tf_idLlanta, 1, 4);
		
		return gridLayout_10;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(false);
		gridLayout_1.setColumns(2);
		gridLayout_1.setRows(2);
		
		// label_20
		label_20 = new Label();
		label_20.setImmediate(false);
		label_20.setWidth("-1px");
		label_20.setHeight("-1px");
		label_20.setValue("Codigo");
		gridLayout_1.addComponent(label_20, 0, 0);
		
		// tf_codigo
		tf_codigo = new TextField();
		tf_codigo.setImmediate(false);
		tf_codigo.setWidth("90.0%");
		tf_codigo.setHeight("-1px");
		gridLayout_1.addComponent(tf_codigo, 1, 0);
		
		// label_21
		label_21 = new Label();
		label_21.setImmediate(false);
		label_21.setWidth("-1px");
		label_21.setHeight("-1px");
		label_21.setValue("Nombre");
		gridLayout_1.addComponent(label_21, 0, 1);
		
		// tf_nombreP
		tf_nombreP = new TextField();
		tf_nombreP.setImmediate(false);
		tf_nombreP.setWidth("90.0%");
		tf_nombreP.setHeight("-1px");
		gridLayout_1.addComponent(tf_nombreP, 1, 1);
		
		return gridLayout_1;
	}

	@AutoGenerated
	private Panel buildPanel_4() {
		// common part: create layout
		panel_4 = new Panel();
		panel_4.setImmediate(false);
		panel_4.setWidth("-1px");
		panel_4.setHeight("-1px");
		
		// verticalLayout_9
		verticalLayout_9 = buildVerticalLayout_9();
		panel_4.setContent(verticalLayout_9);
		
		return panel_4;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_9() {
		// common part: create layout
		verticalLayout_9 = new VerticalLayout();
		verticalLayout_9.setImmediate(false);
		verticalLayout_9.setWidth("100.0%");
		verticalLayout_9.setHeight("-1px");
		verticalLayout_9.setMargin(false);
		
		// gridLayout_11
		gridLayout_11 = buildGridLayout_11();
		verticalLayout_9.addComponent(gridLayout_11);
		
		// gridLayout_12
		gridLayout_12 = buildGridLayout_12();
		verticalLayout_9.addComponent(gridLayout_12);
		
		return verticalLayout_9;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_11() {
		// common part: create layout
		gridLayout_11 = new GridLayout();
		gridLayout_11.setImmediate(false);
		gridLayout_11.setWidth("100.0%");
		gridLayout_11.setHeight("-1px");
		gridLayout_11.setMargin(false);
		gridLayout_11.setColumns(4);
		gridLayout_11.setRows(13);
		
		// label_7
		label_7 = new Label();
		label_7.setImmediate(false);
		label_7.setWidth("-1px");
		label_7.setHeight("-1px");
		label_7.setValue("Desc. Refer 2");
		gridLayout_11.addComponent(label_7, 0, 0);
		
		// tf_descRef2
		tf_descRef2 = new TextField();
		tf_descRef2.setImmediate(false);
		tf_descRef2.setWidth("-1px");
		tf_descRef2.setHeight("-1px");
		gridLayout_11.addComponent(tf_descRef2, 1, 0);
		
		// bt_buscar2
		bt_buscar2 = new Button();
		bt_buscar2.setCaption("Button");
		bt_buscar2.setImmediate(true);
		bt_buscar2.setWidth("-1px");
		bt_buscar2.setHeight("-1px");
		gridLayout_11.addComponent(bt_buscar2, 3, 0);
		
		// label_8
		label_8 = new Label();
		label_8.setImmediate(false);
		label_8.setWidth("-1px");
		label_8.setHeight("-1px");
		label_8.setValue("Diseño 2");
		gridLayout_11.addComponent(label_8, 0, 1);
		
		// tf_diseo2
		tf_diseo2 = new TextField();
		tf_diseo2.setImmediate(false);
		tf_diseo2.setWidth("-1px");
		tf_diseo2.setHeight("-1px");
		gridLayout_11.addComponent(tf_diseo2, 1, 1);
		
		// label_9
		label_9 = new Label();
		label_9.setImmediate(false);
		label_9.setWidth("-1px");
		label_9.setHeight("-1px");
		label_9.setValue("Cantidad 2");
		gridLayout_11.addComponent(label_9, 0, 2);
		
		// select_cantidad2
		select_cantidad2 = new NativeSelect();
		select_cantidad2.setImmediate(true);
		select_cantidad2.setWidth("50px");
		select_cantidad2.setHeight("-1px");
		gridLayout_11.addComponent(select_cantidad2, 1, 2);
		
		// label_17
		label_17 = new Label();
		label_17.setImmediate(false);
		label_17.setWidth("-1px");
		label_17.setHeight("-1px");
		label_17.setValue("Stock");
		gridLayout_11.addComponent(label_17, 2, 2);
		gridLayout_11.setComponentAlignment(label_17, new Alignment(34));
		
		// tf_stock2
		tf_stock2 = new TextField();
		tf_stock2.setImmediate(false);
		tf_stock2.setWidth("50px");
		tf_stock2.setHeight("-1px");
		gridLayout_11.addComponent(tf_stock2, 3, 2);
		gridLayout_11.setComponentAlignment(tf_stock2, new Alignment(48));
		
		// label_10
		label_10 = new Label();
		label_10.setImmediate(false);
		label_10.setWidth("-1px");
		label_10.setHeight("-1px");
		label_10.setValue("Dot 2");
		gridLayout_11.addComponent(label_10, 0, 3);
		
		// tf_dot2
		tf_dot2 = new TextField();
		tf_dot2.setImmediate(false);
		tf_dot2.setWidth("-1px");
		tf_dot2.setHeight("-1px");
		gridLayout_11.addComponent(tf_dot2, 1, 3);
		
		// label_11
		label_11 = new Label();
		label_11.setImmediate(false);
		label_11.setWidth("-1px");
		label_11.setHeight("-1px");
		label_11.setValue("Id. Llantas2");
		gridLayout_11.addComponent(label_11, 0, 7);
		
		// tf_idLlantas
		tf_idLlantas = new TextField();
		tf_idLlantas.setImmediate(false);
		tf_idLlantas.setWidth("-1px");
		tf_idLlantas.setHeight("-1px");
		gridLayout_11.addComponent(tf_idLlantas, 1, 7);
		
		return gridLayout_11;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_12() {
		// common part: create layout
		gridLayout_12 = new GridLayout();
		gridLayout_12.setImmediate(false);
		gridLayout_12.setWidth("100.0%");
		gridLayout_12.setHeight("-1px");
		gridLayout_12.setMargin(false);
		gridLayout_12.setColumns(2);
		gridLayout_12.setRows(2);
		
		// label_18
		label_18 = new Label();
		label_18.setImmediate(false);
		label_18.setWidth("-1px");
		label_18.setHeight("-1px");
		label_18.setValue("Codigo 2");
		gridLayout_12.addComponent(label_18, 0, 0);
		
		// tf_codigo2
		tf_codigo2 = new TextField();
		tf_codigo2.setImmediate(false);
		tf_codigo2.setWidth("90.0%");
		tf_codigo2.setHeight("-1px");
		gridLayout_12.addComponent(tf_codigo2, 1, 0);
		
		// label_19
		label_19 = new Label();
		label_19.setImmediate(false);
		label_19.setWidth("-1px");
		label_19.setHeight("-1px");
		label_19.setValue("Nombre 2");
		gridLayout_12.addComponent(label_19, 0, 1);
		
		// tf_nombreP2
		tf_nombreP2 = new TextField();
		tf_nombreP2.setImmediate(false);
		tf_nombreP2.setWidth("90.0%");
		tf_nombreP2.setHeight("-1px");
		gridLayout_12.addComponent(tf_nombreP2, 1, 1);
		
		return gridLayout_12;
	}

	@AutoGenerated
	private Panel buildPanel_13() {
		// common part: create layout
		panel_13 = new Panel();
		panel_13.setImmediate(false);
		panel_13.setWidth("-1px");
		panel_13.setHeight("-1px");
		
		// gridLayout_2
		gridLayout_2 = buildGridLayout_2();
		panel_13.setContent(gridLayout_2);
		
		return panel_13;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_2() {
		// common part: create layout
		gridLayout_2 = new GridLayout();
		gridLayout_2.setImmediate(false);
		gridLayout_2.setWidth("100.0%");
		gridLayout_2.setHeight("100.0%");
		gridLayout_2.setMargin(false);
		gridLayout_2.setSpacing(true);
		gridLayout_2.setColumns(3);
		gridLayout_2.setRows(3);
		
		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("Neumatico:");
		gridLayout_2.addComponent(label_6, 0, 0);
		
		// select_neumatico
		select_neumatico = new NativeSelect();
		select_neumatico.setImmediate(false);
		select_neumatico.setWidth("-1px");
		select_neumatico.setHeight("-1px");
		gridLayout_2.addComponent(select_neumatico, 2, 0);
		
		// label_12
		label_12 = new Label();
		label_12.setImmediate(false);
		label_12.setWidth("-1px");
		label_12.setHeight("-1px");
		label_12.setValue("Protector:");
		gridLayout_2.addComponent(label_12, 0, 1);
		
		// select_protector
		select_protector = new NativeSelect();
		select_protector.setImmediate(false);
		select_protector.setWidth("-1px");
		select_protector.setHeight("-1px");
		gridLayout_2.addComponent(select_protector, 2, 1);
		
		// label_13
		label_13 = new Label();
		label_13.setImmediate(false);
		label_13.setWidth("-1px");
		label_13.setHeight("-1px");
		label_13.setValue("Valvula Sellomatica");
		gridLayout_2.addComponent(label_13, 0, 2);
		
		// select_selloMati
		select_selloMati = new NativeSelect();
		select_selloMati.setImmediate(false);
		select_selloMati.setWidth("-1px");
		select_selloMati.setHeight("-1px");
		gridLayout_2.addComponent(select_selloMati, 2, 2);
		
		return gridLayout_2;
	}

	@AutoGenerated
	private Panel buildPanel_observaciones() {
		// common part: create layout
		panel_observaciones = new Panel();
		panel_observaciones.setImmediate(false);
		panel_observaciones.setWidth("100.0%");
		panel_observaciones.setHeight("80px");
		
		// verticalLayout_5
		verticalLayout_5 = buildVerticalLayout_5();
		panel_observaciones.setContent(verticalLayout_5);
		
		return panel_observaciones;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_5() {
		// common part: create layout
		verticalLayout_5 = new VerticalLayout();
		verticalLayout_5.setImmediate(false);
		verticalLayout_5.setWidth("100.0%");
		verticalLayout_5.setHeight("-1px");
		verticalLayout_5.setMargin(false);
		
		// ta_observaciones
		ta_observaciones = new TextArea();
		ta_observaciones.setCaption("Observaciones");
		ta_observaciones.setImmediate(false);
		ta_observaciones.setWidth("100.0%");
		ta_observaciones.setHeight("-1px");
		verticalLayout_5.addComponent(ta_observaciones);
		
		return verticalLayout_5;
	}

}
