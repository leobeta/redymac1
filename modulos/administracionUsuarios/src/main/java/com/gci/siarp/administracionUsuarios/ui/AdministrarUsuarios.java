package com.gci.siarp.administracionUsuarios.ui;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;

import com.gci.siarp.administracionUsuarios.domain.Usuarios;
import com.gci.siarp.administracionUsuarios.service.AdministracionUsuariosService;
import com.gci.siarp.api.annotation.SiarpUIComponent;
import com.gci.siarp.auth.domain.DigestKeys;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import ru.xpoft.vaadin.VaadinView;

@SiarpUIComponent
@VaadinView("admin/usuarios")
public class AdministrarUsuarios extends CustomComponent implements View{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout gridLayout_2;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private Table tb_usuarios;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Button bt_nuevo;
	@AutoGenerated
	private Button bt_editar;
	@AutoGenerated
	private Button bt_crear;
	@AutoGenerated
	private TextField tf_documento;
	@AutoGenerated
	private Label lb_documento;
	@AutoGenerated
	private TextField tf_tipodoc;
	@AutoGenerated
	private Label lb_tipoDoc;
	@AutoGenerated
	private ComboBox cb_estado;
	@AutoGenerated
	private Label lb_estado;
	@AutoGenerated
	private TextField tf_email;
	@AutoGenerated
	private Label lb_email;
	@AutoGenerated
	private PasswordField pf_password;
	@AutoGenerated
	private Label lb_password;
	@AutoGenerated
	private TextField tf_usuario;
	@AutoGenerated
	private Label lb_usuario;
	@AutoGenerated
	private TextField tf_sApellido;
	@AutoGenerated
	private Label lb_segundoApe;
	@AutoGenerated
	private TextField tf_pApellido;
	@AutoGenerated
	private Label lb_primerApe;
	@AutoGenerated
	private TextField tf_sNombre;
	@AutoGenerated
	private Label lb_segundoNom;
	@AutoGenerated
	private TextField tf_pNombre;
	@AutoGenerated
	private Label lb_nombre;
	/**
	 * 
	 */
	@Autowired
	AdministracionUsuariosService administracionUsuariosService;
	
	
	private static final long serialVersionUID = 1L;
	private BeanItemContainer<Usuarios> beanTablaUsuarios;
	private Long idUsuario;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	@Override
	public void enter(ViewChangeEvent event) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		init();
	}
	private void init() {
		bt_nuevo.addClickListener(e->nuevoUsuario());
		bt_crear.addClickListener(e->crearUsuario());
		bt_editar.addClickListener(e->editarUsuario());
		
		beanTablaUsuarios = new BeanItemContainer<Usuarios>(Usuarios.class);
		tb_usuarios.setContainerDataSource(beanTablaUsuarios);
		tb_usuarios.addGeneratedColumn("Acciones",this::accionParaEditar);
		tb_usuarios.setVisibleColumns("Acciones","usuario","tipoDocumento","documento","primerNombre","segundoNombre","primerApellido","segundoApellido");
		tb_usuarios.setColumnHeaders("","Usuario","Tipo. Doc.","Documento","P. Nombre","S. Nombre","P. Apellido","S. Apellido");
		Collection<Usuarios> listUsuarios = administracionUsuariosService.buscarDatosDeUsuarios();
		beanTablaUsuarios.removeAllItems();
		beanTablaUsuarios.addAll(listUsuarios);
		
		bt_editar.setEnabled(false);
		bt_nuevo.setEnabled(false);
		llenaCbEstado();
		
	}
	
	private void llenaCbEstado(){
		cb_estado.addItem(1);
		cb_estado.setItemCaption(1,"Activo");
		cb_estado.addItem(2);
		cb_estado.setItemCaption(2,"Inactivo");
		cb_estado.select(1);
	}
	
	private void editarUsuario() {
		try {
			administracionUsuariosService.editaUsuarios(idUsuario,tf_usuario.getValue() ,tf_email.getValue() , DigestKeys.CryptSHA1(pf_password.getValue()), tf_pNombre.getValue(), tf_sNombre.getValue(), 
					tf_tipodoc.getValue(),tf_documento.getValue(), cb_estado.getValue().toString(), tf_pApellido.getValue(), tf_sApellido.getValue());
			Notification.show("Se actualiza usuario de forma correcta", Type.HUMANIZED_MESSAGE);
		} catch (Exception e) {
			Notification.show("Error al actualizar... comuniquese con el administrador del sistema.", Type.ERROR_MESSAGE);
			System.out.println("error-> "+e.getMessage());
		}
		
	}
	public Object accionParaEditar(Table source, Object itemId, Object columnId){
		Usuarios u = (Usuarios) itemId;
		Button bt_edit = new Button();
		bt_edit.setCaption("Editar");
		bt_edit.addClickListener(e->accionEditar(u));
		return bt_edit;
	}
	
	private void accionEditar(Usuarios itemId) {
		bt_editar.setEnabled(true);
		bt_crear.setEnabled(false);
		bt_nuevo.setEnabled(true);
		if(itemId.getPrimerNombre()!=null){
			tf_pNombre.setValue(itemId.getPrimerNombre());
		}
		if(itemId.getSegundoNombre()!=null){
			tf_sNombre.setValue(itemId.getSegundoNombre());
		}
		if(itemId.getPrimerApellido()!=null){
			tf_pApellido.setValue(itemId.getPrimerApellido());
		}
		if(itemId.getSegundoApellido()!=null){
			tf_sApellido.setValue(itemId.getSegundoApellido());
		}
		if(itemId.getUsuario()!=null){
			tf_usuario.setValue(itemId.getUsuario());
		}
		if(itemId.getPassword()!=null){
			pf_password.setValue(itemId.getPassword());
		}
		if(itemId.getEmail()!=null){
			tf_email.setValue(itemId.getEmail());
		}
		if(itemId.getEstado()!=null){
			cb_estado.setValue(itemId.getEstado());
		}
		if(itemId.getTipoDocumento()!=null){
			tf_tipodoc.setValue(itemId.getTipoDocumento());	
		}
		if(itemId.getDocumento()!=null){
			tf_documento.setValue(itemId.getDocumento());
		}
		
		this.idUsuario = itemId.getIdUsuario();
	}
	
	private void nuevoUsuario() {
		bt_crear.setEnabled(true);
		bt_editar.setEnabled(false);
		tf_pNombre.setValue("");
		tf_sNombre.setValue("");
		tf_pApellido.setValue("");
		tf_sApellido.setValue("");
		tf_usuario.setValue("");
		pf_password.setValue("");
		tf_email.setValue("");
		cb_estado.setValue(1);
		tf_tipodoc.setValue("");
		tf_documento.setValue("");
	}
	private void crearUsuario() {
		try {
			administracionUsuariosService.creaUsuarios((long) 7,tf_usuario.getValue(), tf_email.getValue(),DigestKeys.CryptSHA1(pf_password.getValue()),
					tf_pNombre.getValue(), tf_sNombre.getValue(),tf_tipodoc.getValue(),
					tf_documento.getValue(), cb_estado.getValue().toString(), tf_pApellido.getValue(), tf_sApellido.getValue());
			bt_crear.setEnabled(false);
			bt_editar.setEnabled(true);
			
			Notification.show("Se creo usuario correctamente...", Type.HUMANIZED_MESSAGE);
		} catch (Exception e) {
			System.out.println("error-> "+e.getCause()+" mensaje-> "+e.getMessage());
			Notification.show("Error", Type.ERROR_MESSAGE);
		}
		
	}
	public AdministrarUsuarios() {
	
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// gridLayout_2
		gridLayout_2 = buildGridLayout_2();
		mainLayout.addComponent(gridLayout_2);
		
		return mainLayout;
	}
	@AutoGenerated
	private GridLayout buildGridLayout_2() {
		// common part: create layout
		gridLayout_2 = new GridLayout();
		gridLayout_2.setImmediate(false);
		gridLayout_2.setWidth("100.0%");
		gridLayout_2.setHeight("100.0%");
		gridLayout_2.setMargin(true);
		gridLayout_2.setSpacing(true);
		gridLayout_2.setColumns(2);
		
		// panel_1
		panel_1 = buildPanel_1();
		gridLayout_2.addComponent(panel_1, 0, 0);
		
		// panel_2
		panel_2 = buildPanel_2();
		gridLayout_2.addComponent(panel_2, 1, 0);
		
		return gridLayout_2;
	}
	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setCaption("ADMINISTRACION DE USUARIOS");
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);
		
		return panel_1;
	}
	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(true);
		verticalLayout_2.setSpacing(true);
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_2.addComponent(gridLayout_1);
		
		return verticalLayout_2;
	}
	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("390px");
		gridLayout_1.setMargin(false);
		gridLayout_1.setColumns(4);
		gridLayout_1.setRows(12);
		
		// lb_nombre
		lb_nombre = new Label();
		lb_nombre.setImmediate(false);
		lb_nombre.setWidth("-1px");
		lb_nombre.setHeight("-1px");
		lb_nombre.setValue("Primer Nombre:");
		gridLayout_1.addComponent(lb_nombre, 0, 0);
		
		// tf_pNombre
		tf_pNombre = new TextField();
		tf_pNombre.setImmediate(false);
		tf_pNombre.setWidth("250px");
		tf_pNombre.setHeight("-1px");
		gridLayout_1.addComponent(tf_pNombre, 1, 0);
		
		// lb_segundoNom
		lb_segundoNom = new Label();
		lb_segundoNom.setImmediate(false);
		lb_segundoNom.setWidth("-1px");
		lb_segundoNom.setHeight("-1px");
		lb_segundoNom.setValue("Segundo Nombre:");
		gridLayout_1.addComponent(lb_segundoNom, 0, 1);
		
		// tf_sNombre
		tf_sNombre = new TextField();
		tf_sNombre.setImmediate(false);
		tf_sNombre.setWidth("250px");
		tf_sNombre.setHeight("-1px");
		gridLayout_1.addComponent(tf_sNombre, 1, 1);
		
		// lb_primerApe
		lb_primerApe = new Label();
		lb_primerApe.setImmediate(false);
		lb_primerApe.setWidth("-1px");
		lb_primerApe.setHeight("-1px");
		lb_primerApe.setValue("Primer Apellido:");
		gridLayout_1.addComponent(lb_primerApe, 0, 2);
		
		// tf_pApellido
		tf_pApellido = new TextField();
		tf_pApellido.setImmediate(false);
		tf_pApellido.setWidth("250px");
		tf_pApellido.setHeight("-1px");
		gridLayout_1.addComponent(tf_pApellido, 1, 2);
		
		// lb_segundoApe
		lb_segundoApe = new Label();
		lb_segundoApe.setImmediate(false);
		lb_segundoApe.setWidth("-1px");
		lb_segundoApe.setHeight("-1px");
		lb_segundoApe.setValue("Segundo Apellido:");
		gridLayout_1.addComponent(lb_segundoApe, 0, 3);
		
		// tf_sApellido
		tf_sApellido = new TextField();
		tf_sApellido.setImmediate(false);
		tf_sApellido.setWidth("250px");
		tf_sApellido.setHeight("-1px");
		gridLayout_1.addComponent(tf_sApellido, 1, 3);
		
		// lb_usuario
		lb_usuario = new Label();
		lb_usuario.setImmediate(false);
		lb_usuario.setWidth("-1px");
		lb_usuario.setHeight("-1px");
		lb_usuario.setValue("Usuario:");
		gridLayout_1.addComponent(lb_usuario, 0, 4);
		
		// tf_usuario
		tf_usuario = new TextField();
		tf_usuario.setImmediate(false);
		tf_usuario.setWidth("250px");
		tf_usuario.setHeight("-1px");
		gridLayout_1.addComponent(tf_usuario, 1, 4);
		
		// lb_password
		lb_password = new Label();
		lb_password.setImmediate(false);
		lb_password.setWidth("-1px");
		lb_password.setHeight("-1px");
		lb_password.setValue("Password:");
		gridLayout_1.addComponent(lb_password, 0, 5);
		
		// pf_password
		pf_password = new PasswordField();
		pf_password.setImmediate(false);
		pf_password.setWidth("250px");
		pf_password.setHeight("-1px");
		gridLayout_1.addComponent(pf_password, 1, 5);
		
		// lb_email
		lb_email = new Label();
		lb_email.setImmediate(false);
		lb_email.setWidth("-1px");
		lb_email.setHeight("-1px");
		lb_email.setValue("Email:");
		gridLayout_1.addComponent(lb_email, 0, 6);
		
		// tf_email
		tf_email = new TextField();
		tf_email.setImmediate(false);
		tf_email.setWidth("250px");
		tf_email.setHeight("-1px");
		gridLayout_1.addComponent(tf_email, 1, 6);
		
		// lb_estado
		lb_estado = new Label();
		lb_estado.setImmediate(false);
		lb_estado.setWidth("-1px");
		lb_estado.setHeight("-1px");
		lb_estado.setValue("Estado:");
		gridLayout_1.addComponent(lb_estado, 0, 7);
		
		// cb_estado
		cb_estado = new ComboBox();
		cb_estado.setImmediate(false);
		cb_estado.setWidth("250px");
		cb_estado.setHeight("-1px");
		gridLayout_1.addComponent(cb_estado, 1, 7);
		
		// lb_tipoDoc
		lb_tipoDoc = new Label();
		lb_tipoDoc.setImmediate(false);
		lb_tipoDoc.setWidth("-1px");
		lb_tipoDoc.setHeight("-1px");
		lb_tipoDoc.setValue("Tipo Documento:");
		gridLayout_1.addComponent(lb_tipoDoc, 0, 8);
		
		// tf_tipodoc
		tf_tipodoc = new TextField();
		tf_tipodoc.setImmediate(false);
		tf_tipodoc.setWidth("250px");
		tf_tipodoc.setHeight("-1px");
		gridLayout_1.addComponent(tf_tipodoc, 1, 8);
		
		// lb_documento
		lb_documento = new Label();
		lb_documento.setImmediate(false);
		lb_documento.setWidth("-1px");
		lb_documento.setHeight("-1px");
		lb_documento.setValue("Documento:");
		gridLayout_1.addComponent(lb_documento, 0, 9);
		
		// tf_documento
		tf_documento = new TextField();
		tf_documento.setImmediate(false);
		tf_documento.setWidth("250px");
		tf_documento.setHeight("-1px");
		gridLayout_1.addComponent(tf_documento, 1, 9);
		
		// bt_crear
		bt_crear = new Button();
		bt_crear.setCaption("Crear");
		bt_crear.setImmediate(true);
		bt_crear.setWidth("-1px");
		bt_crear.setHeight("-1px");
		gridLayout_1.addComponent(bt_crear, 0, 11);
		
		// bt_editar
		bt_editar = new Button();
		bt_editar.setCaption("Editar");
		bt_editar.setImmediate(true);
		bt_editar.setWidth("-1px");
		bt_editar.setHeight("-1px");
		gridLayout_1.addComponent(bt_editar, 1, 11);
		
		// bt_nuevo
		bt_nuevo = new Button();
		bt_nuevo.setCaption("Nuevo");
		bt_nuevo.setImmediate(true);
		bt_nuevo.setWidth("-1px");
		bt_nuevo.setHeight("-1px");
		gridLayout_1.addComponent(bt_nuevo, 2, 11);
		
		return gridLayout_1;
	}
	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setCaption("INFORMACION DE USUARIOS");
		panel_2.setImmediate(false);
		panel_2.setWidth("100.0%");
		panel_2.setHeight("-1px");
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		panel_2.setContent(verticalLayout_3);
		
		return panel_2;
	}
	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);
		
		// tb_usuarios
		tb_usuarios = new Table();
		tb_usuarios.setImmediate(false);
		tb_usuarios.setWidth("100.0%");
		tb_usuarios.setHeight("-1px");
		verticalLayout_3.addComponent(tb_usuarios);
		
		return verticalLayout_3;
	}

	

}
